name: Build and deploy to pantheon

on:
  push:
    branches:
      - master
      - dev
      - test
      - feature-*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
# Use ssh-keygen to generate ssh key
# Convert the ssh key to PEM format using ssh-keygen -p -m PEM -f [NAME_OF_SSH_KEY_PLACEHOLDER]
# Add private key to repository secret
# Add publick key to the server where you want to deploy, in this case pantheon
# Ref https://medium.com/swlh/pantheon-and-github-actions-automated-deployments-via-github-actions-c245aa954797
      - name: Add ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: ${{ secrets.SSH_CONFIG }}
      - name: Validate composer
        run: composer validate
# Add cache for composer dependecnies.
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependency
        run: composer install
      - name: Deploy the code
        run: |
          git remote add pantheon ${{ secrets.GIT_REPO_URL }}
          git push pantheon ${{ github.ref_name }}
      - name: Deployed status
        run: echo "Deployed ...."
